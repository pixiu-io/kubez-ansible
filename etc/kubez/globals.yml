---
#####################
# kubernetes options
#####################
# Enable an high availability kubernetes cluster.
#enable_kubernetes_ha: "no"

kube_release: 1.23.6

cluster_cidr: "172.30.0.0/16"
service_cidr: "10.254.0.0/16"

#Network interface is optional, the default value
#is eth0.
network_interface: "eth0"

# This should be a VIP, an unused IP on your network that will float between
# the hosts running keepalived for high-availability.
#kube_vip_address: ""

# Enable haproxy and keepalived
# This configuration is usually enabled when self-created VMs require high availability.
#enable_haproxy: "no"

# Listen port for kubernetes.
# 启用 haproxy + keepalived 时, 监听端口推荐使用 8443
#kube_vip_port: 6443

# Kubernetes network cni options
#enable_calico: "no"

# kubernetes 镜像仓库地址，默认阿里云，用户可根据实际情况配置
# 可使用 pixiu 社区镜像仓库：docker.io/pixiuio
image_repository: "registry.cn-hangzhou.aliyuncs.com/google_containers"

# 自定义镜像仓库
app_image_repository: "ccr.ccs.tencentyun.com/pixiucloud"

# 自定义 REPO 仓库
repo_dir: "/etc/kubez/repo"

###############
# Host Options
###############
# 自动重置节点的 hostname
# Rocky 系统不生效
#set_hostname: "yes"

##################
# Runtime Options
##################
# runtime docker version
# 通过 apt-cache madison docker-ce 查找合适版本
docker_release: ""
# runtime containerd version
containerd_release: ""

# 自定义 docker 数据存放目录
docker_data_dir: "{{ runtime_data_dir }}"
# 自定义 containerd 数据存放目录
containerd_data_dir: "{{ runtime_data_dir }}"

####################
# kubernetes(1.24.0+) 使用 runtime 为 docker
####################
# cir-dockerd 的二进制文件镜像
#cri_dockerd_image: "ccr.ccs.tencentyun.com/pixiucloud/cri-dockerd:v0.3.10"

#####################
# keepalived options
#####################
# Arbitrary unique number from 0..255
#keepalived_virtual_router_id: "68"

####################
# Dashboard options
####################
#enable_dashboard: "no"
#dashboard_chart_version: 6.0.0

#dashboard_name: kubernetes-dashboard
#dashboard_namespace: "{{ kubez_namespace }}"
#dashboard_vip_address: ""

# helm 仓库配置项, 默认为 pixiu helm chart 仓库
#dashboard_repo_name: "{{ default_repo_name }}"
#dashboard_repo_url: "{{ default_repo_url }}"
#dashboard_path: pixiuio/kubernetes-dashboard
#dashboard_version: 6.0.0

#######################
# StorageClass Options
#######################
#enable_nfs: "yes"
#enable_nfs_csi: "{{ enable_nfs }}"

#nfs_storage_class: managed-nfs-storage
#nfs_server: "{{ hostvars[groups['storage'][0]]['ansible_' + api_interface]['ipv4']['address'] }}"
#nfs_share: /data/share

#############################
# Pixiu-localstorage Options
#############################
#enable_pixiu_localstorage: "no"

#enable_rbd_provisioner: "no"
#pool_name: kube

# Ceph monitors, comma delimited. This parameter is required.
#monitors: 172.16.60.102:6789

# Ceph auth get-key client.admin | base64
#admin_key:

# Ceph osd pool create pool_name 8 8
# Ceph auth add client.pool_name mon 'allow r' osd 'allow rwx pool=pool_name'
# Ceph auth get-key client.pool_name | base64
#pool_key:

###############
# Minio Options
###############
# https://github.com/minio/minio
#enable_minio: "no"

#minio_name: minio
#minio_namespace: "{{ kubez_namespace }}"

#minio_storage_class: managed-nfs-storage
#minio_storage_size: 500Gi
# 生产环境推荐 16Gi
#minio_memory_size: 4Gi

# applicable only for MinIO distributed mod
# 生产环境推荐 16
#minio_replicas: 4
#minio_rootUser: minioadmin
#minio_rootPassword: minioadmin

#####################
# Prometheus Options
#####################
#enable_prometheus: "no"
#prometheus_namespace: "{{ kubez_namespace }}"

# 是否开启 prometheus-server 的持久化存储，默认为开启
# 必须是 'true' or 'false'，否则会被 helm_toolbox 模块忽略
#enable_prometheus_server_storage: 'true'
#prometheus_server_storage_class: managed-nfs-storage
#prometheus_server_persistent_volume_size: 8Gi

# 是否开启 prometheus-alertmanager ，默认为开启
# 必须是 'true' or 'false'，否则会被 helm_toolbox 模块忽略
#enable_prometheus_alertmanager: 'true'
#prometheus_alertmanager_persistent_volume_size: 2Gi

# helm 仓库配置项, 默认为 pixiu helm chart 仓库
#prometheus_repo_name: "{{ default_repo_name }}"
#prometheus_repo_url: "{{ default_repo_url }}"
#prometheus_path: pixiuio/prometheus
#prometheus_version: 25.10.0

#####################
# Prometheus operator
#####################
#enable_kube_prometheus_stack: "no"
#kube_prometheus_namespace: "{{ kubez_namespace }}"

# helm 仓库配置项
#kube_prometheus_repo_name: "{{ default_repo_name }}"
#kube_prometheus_repo_url: "{{ default_repo_url }}"
#kube_prometheus_path: pixiuio/kube-prometheus-stack
#kube_prometheus_version: 65.1.1

#kube_prometheus_replicas: 2

#################
# Grafana Options
#################
#enable_grafana: "no"
#grafana_namespace: "{{ kubez_namespace }}"
# Customize grafana user and password
#grafana_admin_user: admin
#grafana_admin_password: admin

# 是否开启 grafana 持久化存储，默认为开启
#必须是 'true' or 'false'，否则会被 helm_toolbox 模块忽略
#enable_grafana_persistent_volume: 'true'
#grafana_storage_class: managed-nfs-storag
#grafana_persistence_size: 10Gi

# helm 仓库配置项
#grafana_repo_name: "{{ default_repo_name }}"
#grafana_repo_url: "{{ default_repo_url }}"
#grafana_path: pixiuio/grafana
#grafana_version: 7.2.4

##############
# Dify Options
##############
#enable_dify: "no"
#dify_namespace: "{{ kubez_namespace }}"

# Storage class to be used
#dify_storage_class: managed-nfs-storage

# helm 仓库配置项
#dify_repo_name: "{{ default_repo_name }}"
#dify_repo_url: "{{ default_repo_url }}"
#dify_path: pixiuio/dify
#dify_version: 1.4.0

##############
# Loki Options
##############
#enable_loki: "no"
#loki_namespace: "{{ kubez_namespace }}"

# Storage class to be used
#loki_storage_class: managed-nfs-storage
# Size of persistent disk
#loki_storage_size: 10Gi
# Should authentication be enabled
#loki_auth_enabled: 'false'

# Number of replicas
#loki_commonConfig_replication_factor_number: 2
# Number of customized loki read-write replicas
#loki_read_replicas_number: 3
#loki_write_replicas_number: 3

# Storage config
#loki_storage_bucketNames_chunks: chunks
#loki_storage_bucketNames_ruler: ruler
#loki_storage_bucketNames_admin: admin

# S3 config
s3:
  endpoint: http://172.17.16.13:9000
  secretAccessKey: minioadmin
  accessKeyId: minioadmin
  s3ForcePathStyle: true
  insecure: true

# helm 仓库配置项
#loki_repo_name: "{{ default_repo_name }}"
#loki_repo_url: "{{ default_repo_url }}"
#loki_path: pixiuio/loki
#loki_version: 5.41.8

##################
# promtail Options
##################
#enable_promtail: "no"
#promtail_namespace: "{{ kubez_namespace }}"

# Loki server url for push
#loki_url: http://loki-gateway/loki/api/v1/push

# helm 仓库配置项
#promtail_repo_name: "{{ default_repo_name }}"
#promtail_repo_url: "{{ default_repo_url }}"
#promtail_path: pixiuio/promtail
#promtail_version: 6.15.4

##################
# metallb Options
##################
#enable_metallb: "no"
#metallb_namespace: "{{ kubez_namespace }}"

###############
# Helm Options
###############
#enable_helm: "yes"

# v3.5.2 and v3.9.0 is available, default is v3.9.0
#helm_release: v3.9.0
#helm_image: "ccr.ccs.tencentyun.com/pixiucloud/helm-toolbox:{{ helm_release }}"

########################
# Elasticsearch Options
########################
# The Fluentd, elasticsearch, and kibana will be installed when enabled.
#enable_elasticsearch: "no"
#elasticsearch_name: elasticsearch
#elasticsearch_namespace: "{{ kubez_namespace }}"
#elasticsearch_chart_version: 8.5.1

# 生产环境推荐 3 副本
#elasticsearch_replicas: 1
# 生产环境至少为 2 节点
#minimum_master_nodes: 1

###################
# Filebeat Options
###################
#enable_filebeat: "no"
#filebeat_name: filebeat
#filebeat_namespace: "{{ kubez_namespace }}"
#filebeat_chart_version: 8.5.1

#################
# Kibana Options
#################
#enable_kibana: "no"
#kibana_name: kibana
#kibana_namespace: "{{ kubez_namespace }}"
#kibana_chart_version: 8.5.1
#kibana_replicas: 1

##################
# Fluentd Options
##################
#enable_fluentd: "no"
#fluentd_name: fluentd
#fluentd_namespace: "{{ kubez_namespace }}"
#fluentd_chart_version: 0.3.9

######################
# Artifactory Options
######################
#enable_artifactory: "no"

#artifactory_namespace: "{{ kubez_namespace }}"
#artifactory_storage_class: managed-nfs-storage
#artifactory_size: "20Gi"
#postgresql_size: "20Gi"

##################
# Jenkins Options
##################
#enable_jenkins: "no"
#jenkins_namespace: "{{ kubez_namespace }}"
#jenkins_storage_class: managed-nfs-storage
#jenkins_storage_size: 8Gi

# The initial password for admin
#initial_admin_password: admin123456

# helm 仓库配置项, 默认为 pixiu helm chart 仓库
#jenkins_repo_name: "{{ default_repo_name }}"
#jenkins_repo_url: "{{ default_repo_url }}"
#jenkins_path: pixiuio/jenkins
#jenkins_version: 4.12.0

#################
# Tekton Options
#################
#enable_tekton: "no"

#########################
# metrics-scraper Options
#########################
#enable_metrics_scraper: "yes"

#######################
# cert-manager Options
#######################
# enable_cert_manager: "no"

# cert_manager_names: cert-manager
# cert_manager_namespace: "{{ kubez_namespace }}"

#################
# Harbor Options
#################
#enable_harbor: "no"
#harbor_name: harbor
#harbor_namespace: "{{ kubez_namespace }}"
#harbor_storage_size: "5Gi"
#harbor_admin_password: "Harbor12345"

#expose_http_nodeport: 30011
#expose_notary_nodeport: 30012

# Setting it to "keep" to avoid removing PVCs during a helm delete
# operation. Leaving it empty will delete PVCs after the chart deleted
# (this does not apply for PVCs that are created for internal database
# and redis components, i.e. they are never deleted automatically)
#harbor_resource_policy: " "

# Valid options are [ ingress, nodePort ]
#expose_type: nodePort
#expose_core_domain: core.harbor.kubez.com
#expose_notary_domain: notary.harbor.kubez.com
#harbor_storage_class: managed-nfs-storage

####################################
# Operator-Lifecycle-Manager Options
####################################
#enable_olm: "no"

##################
# Postgres Options
##################
#enable_postgres: "no"

#postgres_name: postgres
#postgress_namespace: operators

###############
# Redis Options
###############
#enable_redis: "no"

#redis_name: redis
#redis_namespace: operators

##################
# MongoDB Options
##################
#enable_mongodb: "no"

#mongodb_name: mongodb
#mongodb_namespace: operators

##################
# kafka Options
##################
#enable_kafka: "no"

#kafka_name: kafka
#kafka_namespace: operators

##################
# RabbitMQ Options
##################
#enable_rabbitmq: "no"

#rabbitmq_name: rabbitmq
#rabbitmq_namespace: operators

###########################
# pixiu-autoscaler Options
###########################
#enable_pixiu_autoscaler: "yes"

################
# Istio Options
################
#enable_istio: "no"
#istio_chart_version: "1.16.1"

#######################
# Ingress Nginx Options
#######################
#enable_ingress_nginx: "yes"

#######################
# Metrics Server Options
#######################
#enable_metrics_server: "yes"

####################
# Chaos Mesh Options
####################
# https://chaos-mesh.org/docs/production-installation-using-helm/
#enable_chaos_mesh: "no"
#chaos_mesh_chart_version: "2.6.2"

#chaos_mesh_name: chaos-mesh
#chaos_mesh_namespace: "{{ kubez_namespace }}"
#socket_path: /var/run/docker.sock
#runtime: docker


################
# Cilium Options
################
# https://docs.cilium.io/en/stable/overview/intro/
#enable_cilium: "no"
#cilium_chart_version: 1.14.5
#cilium_namespace: kube-system

######################
# Kuberhealthy Options
######################
# https://github.com/kuberhealthy/kuberhealthy
#enable_kuberhealthy: "no"
#kuberhealthy_namespace: pixiu-system
#kuberhealthy_version: "100"

######################
# zookeeper
######################
#enable_zookeeper: "no"
# helm 配置
#zookeeper_repository_name: "{{ default_repo_name }}"
#zookeeper_repository_url: "{{ default_repo_url }}"
#zookeeper_repository_path: "{{ default_repo_name }}/zookeeper"
# zookeeper配置
#zookeeper_replicas: 1
#zookeeper_requests_cpu: 1
#zookeeper_requests_memory: "1Gi"
#zookeeper_namespace: "{{ kubez_namespace }}"
#zookeeper_image_registry: "{{ app_image_repository }}"
#zookeeper_image_repository: "zookeeper"
#zookeeper_version: "11.4.9"
# zookeeper持久化设置
#zookeeper_persistence_enabled: "false"
#zookeeper_persistence_size: "8Gi"
#zookeeper_persistence_storageclass: "{{ nfs_storage_class }}"
#zookeeper_context_fsgroup: "0"

############################
# prometheus-adapter Options
############################
#enable_prometheus_adapter: "yes"
#prometheus_adapter_namespace: pixiu-system
#prometheus_adapter_repository_name: "{{ default_repo_name }}"
#prometheus_adapter_repository_url: "{{ default_repo_url }}"
#prometheus_adapter_path: "{{ default_repo_name }}/prometheus-adapter"
#prometheus_adapter_version: "4.11.0"
#prometheus_adapter_image_repository: "ccr.ccs.tencentyun.com/pixiucloud/prometheus-adapter"
#prometheus_adapter_image_tag: "v0.12.0"

#prometheus_url: http://kube-prometheus-stack-prometheus.pixiu-system.svc
#prometheus_port: 9090
